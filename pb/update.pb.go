// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: update.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The update's unique identifier. Update identifiers start from a certain
	// positive number and increase sequentially. This identifier becomes
	// especially handy if you're using webhooks, since it allows you to ignore
	// repeated updates or to restore the correct update sequence, should they
	// get out of order. If there are no new updates for at least a week, then
	// the identifier of the next update will be chosen randomly instead of sequentially.
	UpdateId int64 `protobuf:"varint,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	// Optional. New incoming message of any kind - text, photo, sticker, etc.
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Optional. New version of a message that is known to the bot and was edited.
	// This update may at times be triggered by changes to message fields that
	// are either unavailable or not actively used by your bot.
	EditedMessage *Message `protobuf:"bytes,3,opt,name=edited_message,json=editedMessage,proto3" json:"edited_message,omitempty"`
	// Optional. New incoming channel post of any kind - text, photo, sticker, etc.
	ChannelPost *Message `protobuf:"bytes,4,opt,name=channel_post,json=channelPost,proto3" json:"channel_post,omitempty"`
	// Optional. New version of a channel post that is known to the bot and was edited.
	// This update may at times be triggered by changes to message fields that
	// are either unavailable or not actively used by your bot.
	EditedChannelPost *Message `protobuf:"bytes,5,opt,name=edited_channel_post,json=editedChannelPost,proto3" json:"edited_channel_post,omitempty"`
	// Optional. The bot was connected to or disconnected from a business account,
	// or a user edited an existing connection with the bot.
	BusinessConnection *BusinessConnection `protobuf:"bytes,6,opt,name=business_connection,json=businessConnection,proto3" json:"business_connection,omitempty"`
	// Optional. New message from a connected business account.
	BusinessMessage *Message `protobuf:"bytes,7,opt,name=business_message,json=businessMessage,proto3" json:"business_message,omitempty"`
	// Optional. New version of a message from a connected business account.
	EditedBusinessMessage *Message `protobuf:"bytes,8,opt,name=edited_business_message,json=editedBusinessMessage,proto3" json:"edited_business_message,omitempty"`
	// Optional. Messages were deleted from a connected business account.
	DeletedBusinessMessages *BusinessMessagesDeleted `protobuf:"bytes,9,opt,name=deleted_business_messages,json=deletedBusinessMessages,proto3" json:"deleted_business_messages,omitempty"`
	// Optional. A reaction to a message was changed by a user.
	// The bot must be an administrator in the chat and must explicitly specify
	// "message_reaction" in the list of allowed_updates to receive these updates.
	// The update isn't received for reactions set by bots.
	MessageReaction *MessageReactionUpdated `protobuf:"bytes,10,opt,name=message_reaction,json=messageReaction,proto3" json:"message_reaction,omitempty"`
	// Optional. Reactions to a message with anonymous reactions were changed.
	// The bot must be an administrator in the chat and must explicitly specify
	// "message_reaction_count" in the list of allowed_updates to receive these updates.
	// The updates are grouped and can be sent with delay up to a few minutes.
	MessageReactionCount *MessageReactionCountUpdated `protobuf:"bytes,11,opt,name=message_reaction_count,json=messageReactionCount,proto3" json:"message_reaction_count,omitempty"`
	// Optional. New incoming inline query.
	InlineQuery *InlineQuery `protobuf:"bytes,12,opt,name=inline_query,json=inlineQuery,proto3" json:"inline_query,omitempty"`
	// Optional. The result of an inline query that was chosen by a user and sent to their chat partner.
	// Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.
	ChosenInlineResult *ChosenInlineResult `protobuf:"bytes,13,opt,name=chosen_inline_result,json=chosenInlineResult,proto3" json:"chosen_inline_result,omitempty"`
	// Optional. New incoming callback query.
	CallbackQuery *CallbackQuery `protobuf:"bytes,14,opt,name=callback_query,json=callbackQuery,proto3" json:"callback_query,omitempty"`
	// Optional. New incoming shipping query. Only for invoices with flexible price.
	ShippingQuery *ShippingQuery `protobuf:"bytes,15,opt,name=shipping_query,json=shippingQuery,proto3" json:"shipping_query,omitempty"`
	// Optional. New incoming pre-checkout query. Contains full information about checkout.
	PreCheckoutQuery *PreCheckoutQuery `protobuf:"bytes,16,opt,name=pre_checkout_query,json=preCheckoutQuery,proto3" json:"pre_checkout_query,omitempty"`
	// Optional. New poll state. Bots receive only updates about manually stopped polls
	// and polls, which are sent by the bot.
	Poll *Poll `protobuf:"bytes,17,opt,name=poll,proto3" json:"poll,omitempty"`
	// Optional. A user changed their answer in a non-anonymous poll.
	// Bots receive new votes only in polls that were sent by the bot itself.
	PollAnswer *PollAnswer `protobuf:"bytes,18,opt,name=poll_answer,json=pollAnswer,proto3" json:"poll_answer,omitempty"`
	// Optional. The bot's chat member status was updated in a chat.
	// For private chats, this update is received only when the bot is blocked or unblocked by the user.
	MyChatMember *ChatMemberUpdated `protobuf:"bytes,19,opt,name=my_chat_member,json=myChatMember,proto3" json:"my_chat_member,omitempty"`
	// Optional. A chat member's status was updated in a chat.
	// The bot must be an administrator in the chat and must explicitly specify
	// "chat_member" in the list of allowed_updates to receive these updates.
	ChatMember *ChatMemberUpdated `protobuf:"bytes,20,opt,name=chat_member,json=chatMember,proto3" json:"chat_member,omitempty"`
	// Optional. A request to join the chat has been sent.
	// The bot must have the can_invite_users administrator right in the chat to receive these updates.
	ChatJoinRequest *ChatJoinRequest `protobuf:"bytes,21,opt,name=chat_join_request,json=chatJoinRequest,proto3" json:"chat_join_request,omitempty"`
	// Optional. A chat boost was added or changed.
	// The bot must be an administrator in the chat to receive these updates.
	ChatBoost *ChatBoostUpdated `protobuf:"bytes,22,opt,name=chat_boost,json=chatBoost,proto3" json:"chat_boost,omitempty"`
	// Optional. A boost was removed from a chat.
	// The bot must be an administrator in the chat to receive these updates.
	RemovedChatBoost *ChatBoostRemoved `protobuf:"bytes,23,opt,name=removed_chat_boost,json=removedChatBoost,proto3" json:"removed_chat_boost,omitempty"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_update_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_update_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_update_proto_rawDescGZIP(), []int{0}
}

func (x *Update) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *Update) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Update) GetEditedMessage() *Message {
	if x != nil {
		return x.EditedMessage
	}
	return nil
}

func (x *Update) GetChannelPost() *Message {
	if x != nil {
		return x.ChannelPost
	}
	return nil
}

func (x *Update) GetEditedChannelPost() *Message {
	if x != nil {
		return x.EditedChannelPost
	}
	return nil
}

func (x *Update) GetBusinessConnection() *BusinessConnection {
	if x != nil {
		return x.BusinessConnection
	}
	return nil
}

func (x *Update) GetBusinessMessage() *Message {
	if x != nil {
		return x.BusinessMessage
	}
	return nil
}

func (x *Update) GetEditedBusinessMessage() *Message {
	if x != nil {
		return x.EditedBusinessMessage
	}
	return nil
}

func (x *Update) GetDeletedBusinessMessages() *BusinessMessagesDeleted {
	if x != nil {
		return x.DeletedBusinessMessages
	}
	return nil
}

func (x *Update) GetMessageReaction() *MessageReactionUpdated {
	if x != nil {
		return x.MessageReaction
	}
	return nil
}

func (x *Update) GetMessageReactionCount() *MessageReactionCountUpdated {
	if x != nil {
		return x.MessageReactionCount
	}
	return nil
}

func (x *Update) GetInlineQuery() *InlineQuery {
	if x != nil {
		return x.InlineQuery
	}
	return nil
}

func (x *Update) GetChosenInlineResult() *ChosenInlineResult {
	if x != nil {
		return x.ChosenInlineResult
	}
	return nil
}

func (x *Update) GetCallbackQuery() *CallbackQuery {
	if x != nil {
		return x.CallbackQuery
	}
	return nil
}

func (x *Update) GetShippingQuery() *ShippingQuery {
	if x != nil {
		return x.ShippingQuery
	}
	return nil
}

func (x *Update) GetPreCheckoutQuery() *PreCheckoutQuery {
	if x != nil {
		return x.PreCheckoutQuery
	}
	return nil
}

func (x *Update) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *Update) GetPollAnswer() *PollAnswer {
	if x != nil {
		return x.PollAnswer
	}
	return nil
}

func (x *Update) GetMyChatMember() *ChatMemberUpdated {
	if x != nil {
		return x.MyChatMember
	}
	return nil
}

func (x *Update) GetChatMember() *ChatMemberUpdated {
	if x != nil {
		return x.ChatMember
	}
	return nil
}

func (x *Update) GetChatJoinRequest() *ChatJoinRequest {
	if x != nil {
		return x.ChatJoinRequest
	}
	return nil
}

func (x *Update) GetChatBoost() *ChatBoostUpdated {
	if x != nil {
		return x.ChatBoost
	}
	return nil
}

func (x *Update) GetRemovedChatBoost() *ChatBoostRemoved {
	if x != nil {
		return x.RemovedChatBoost
	}
	return nil
}

var File_update_proto protoreflect.FileDescriptor

var file_update_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x6d, 0x69, 0x73, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x0a,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0e,
	0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x13, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x11, 0x65, 0x64, 0x69, 0x74,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x0a, 0x17, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x15, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x52, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48,
	0x0a, 0x14, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x12, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x38, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0d, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x12,
	0x70, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x12, 0x2f,
	0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x3b, 0x0a, 0x0e, 0x6d, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x0c,
	0x6d, 0x79, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x12, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x42, 0x6f, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x10, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x42, 0x05,
	0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_update_proto_rawDescOnce sync.Once
	file_update_proto_rawDescData = file_update_proto_rawDesc
)

func file_update_proto_rawDescGZIP() []byte {
	file_update_proto_rawDescOnce.Do(func() {
		file_update_proto_rawDescData = protoimpl.X.CompressGZIP(file_update_proto_rawDescData)
	})
	return file_update_proto_rawDescData
}

var file_update_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_update_proto_goTypes = []any{
	(*Update)(nil),                      // 0: pb.Update
	(*Message)(nil),                     // 1: pb.Message
	(*BusinessConnection)(nil),          // 2: pb.BusinessConnection
	(*BusinessMessagesDeleted)(nil),     // 3: pb.BusinessMessagesDeleted
	(*MessageReactionUpdated)(nil),      // 4: pb.MessageReactionUpdated
	(*MessageReactionCountUpdated)(nil), // 5: pb.MessageReactionCountUpdated
	(*InlineQuery)(nil),                 // 6: pb.InlineQuery
	(*ChosenInlineResult)(nil),          // 7: pb.ChosenInlineResult
	(*CallbackQuery)(nil),               // 8: pb.CallbackQuery
	(*ShippingQuery)(nil),               // 9: pb.ShippingQuery
	(*PreCheckoutQuery)(nil),            // 10: pb.PreCheckoutQuery
	(*Poll)(nil),                        // 11: pb.Poll
	(*PollAnswer)(nil),                  // 12: pb.PollAnswer
	(*ChatMemberUpdated)(nil),           // 13: pb.ChatMemberUpdated
	(*ChatJoinRequest)(nil),             // 14: pb.ChatJoinRequest
	(*ChatBoostUpdated)(nil),            // 15: pb.ChatBoostUpdated
	(*ChatBoostRemoved)(nil),            // 16: pb.ChatBoostRemoved
}
var file_update_proto_depIdxs = []int32{
	1,  // 0: pb.Update.message:type_name -> pb.Message
	1,  // 1: pb.Update.edited_message:type_name -> pb.Message
	1,  // 2: pb.Update.channel_post:type_name -> pb.Message
	1,  // 3: pb.Update.edited_channel_post:type_name -> pb.Message
	2,  // 4: pb.Update.business_connection:type_name -> pb.BusinessConnection
	1,  // 5: pb.Update.business_message:type_name -> pb.Message
	1,  // 6: pb.Update.edited_business_message:type_name -> pb.Message
	3,  // 7: pb.Update.deleted_business_messages:type_name -> pb.BusinessMessagesDeleted
	4,  // 8: pb.Update.message_reaction:type_name -> pb.MessageReactionUpdated
	5,  // 9: pb.Update.message_reaction_count:type_name -> pb.MessageReactionCountUpdated
	6,  // 10: pb.Update.inline_query:type_name -> pb.InlineQuery
	7,  // 11: pb.Update.chosen_inline_result:type_name -> pb.ChosenInlineResult
	8,  // 12: pb.Update.callback_query:type_name -> pb.CallbackQuery
	9,  // 13: pb.Update.shipping_query:type_name -> pb.ShippingQuery
	10, // 14: pb.Update.pre_checkout_query:type_name -> pb.PreCheckoutQuery
	11, // 15: pb.Update.poll:type_name -> pb.Poll
	12, // 16: pb.Update.poll_answer:type_name -> pb.PollAnswer
	13, // 17: pb.Update.my_chat_member:type_name -> pb.ChatMemberUpdated
	13, // 18: pb.Update.chat_member:type_name -> pb.ChatMemberUpdated
	14, // 19: pb.Update.chat_join_request:type_name -> pb.ChatJoinRequest
	15, // 20: pb.Update.chat_boost:type_name -> pb.ChatBoostUpdated
	16, // 21: pb.Update.removed_chat_boost:type_name -> pb.ChatBoostRemoved
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_update_proto_init() }
func file_update_proto_init() {
	if File_update_proto != nil {
		return
	}
	file_message_proto_init()
	file_misc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_update_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_update_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_update_proto_goTypes,
		DependencyIndexes: file_update_proto_depIdxs,
		MessageInfos:      file_update_proto_msgTypes,
	}.Build()
	File_update_proto = out.File
	file_update_proto_rawDesc = nil
	file_update_proto_goTypes = nil
	file_update_proto_depIdxs = nil
}
