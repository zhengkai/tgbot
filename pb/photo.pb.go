// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: photo.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PhotoReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	From      *User    `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Chat      *Chat    `protobuf:"bytes,3,opt,name=chat,proto3" json:"chat,omitempty"`
	Date      uint64   `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	Photo     []*Photo `protobuf:"bytes,5,rep,name=photo,proto3" json:"photo,omitempty"`
}

func (x *PhotoReturn) Reset() {
	*x = PhotoReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoReturn) ProtoMessage() {}

func (x *PhotoReturn) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoReturn.ProtoReflect.Descriptor instead.
func (*PhotoReturn) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{0}
}

func (x *PhotoReturn) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *PhotoReturn) GetFrom() *User {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *PhotoReturn) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *PhotoReturn) GetDate() uint64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *PhotoReturn) GetPhoto() []*Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId       string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileUniqueId string `protobuf:"bytes,2,opt,name=file_unique_id,json=fileUniqueId,proto3" json:"file_unique_id,omitempty"`
	FileSize     uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Width        uint32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height       uint32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{1}
}

func (x *Photo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Photo) GetFileUniqueId() string {
	if x != nil {
		return x.FileUniqueId
	}
	return ""
}

func (x *Photo) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Photo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Photo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SendPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessConnectionId  string           `protobuf:"bytes,1,opt,name=business_connection_id,json=businessConnectionId,proto3" json:"business_connection_id,omitempty"`
	ChatId                string           `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageThreadId       int64            `protobuf:"varint,3,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty"`
	Photo                 string           `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	Caption               string           `protobuf:"bytes,5,opt,name=caption,proto3" json:"caption,omitempty"`
	ParseMode             string           `protobuf:"bytes,6,opt,name=parse_mode,json=parseMode,proto3" json:"parse_mode,omitempty"`
	CaptionEntities       []*MessageEntity `protobuf:"bytes,7,rep,name=caption_entities,json=captionEntities,proto3" json:"caption_entities,omitempty"`
	ShowCaptionAboveMedia bool             `protobuf:"varint,8,opt,name=show_caption_above_media,json=showCaptionAboveMedia,proto3" json:"show_caption_above_media,omitempty"`
	HasSpoiler            bool             `protobuf:"varint,9,opt,name=has_spoiler,json=hasSpoiler,proto3" json:"has_spoiler,omitempty"`
	DisableNotification   bool             `protobuf:"varint,10,opt,name=disable_notification,json=disableNotification,proto3" json:"disable_notification,omitempty"`
	ProtectContent        bool             `protobuf:"varint,11,opt,name=protect_content,json=protectContent,proto3" json:"protect_content,omitempty"`
	MessageEffectId       string           `protobuf:"bytes,12,opt,name=message_effect_id,json=messageEffectId,proto3" json:"message_effect_id,omitempty"`
	ReplyParameters       *ReplyParameters `protobuf:"bytes,13,opt,name=reply_parameters,json=replyParameters,proto3" json:"reply_parameters,omitempty"`
	ReplyMarkup           *ReplyMarkup     `protobuf:"bytes,14,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
}

func (x *SendPhoto) Reset() {
	*x = SendPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoto) ProtoMessage() {}

func (x *SendPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoto.ProtoReflect.Descriptor instead.
func (*SendPhoto) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{2}
}

func (x *SendPhoto) GetBusinessConnectionId() string {
	if x != nil {
		return x.BusinessConnectionId
	}
	return ""
}

func (x *SendPhoto) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SendPhoto) GetMessageThreadId() int64 {
	if x != nil {
		return x.MessageThreadId
	}
	return 0
}

func (x *SendPhoto) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *SendPhoto) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *SendPhoto) GetParseMode() string {
	if x != nil {
		return x.ParseMode
	}
	return ""
}

func (x *SendPhoto) GetCaptionEntities() []*MessageEntity {
	if x != nil {
		return x.CaptionEntities
	}
	return nil
}

func (x *SendPhoto) GetShowCaptionAboveMedia() bool {
	if x != nil {
		return x.ShowCaptionAboveMedia
	}
	return false
}

func (x *SendPhoto) GetHasSpoiler() bool {
	if x != nil {
		return x.HasSpoiler
	}
	return false
}

func (x *SendPhoto) GetDisableNotification() bool {
	if x != nil {
		return x.DisableNotification
	}
	return false
}

func (x *SendPhoto) GetProtectContent() bool {
	if x != nil {
		return x.ProtectContent
	}
	return false
}

func (x *SendPhoto) GetMessageEffectId() string {
	if x != nil {
		return x.MessageEffectId
	}
	return ""
}

func (x *SendPhoto) GetReplyParameters() *ReplyParameters {
	if x != nil {
		return x.ReplyParameters
	}
	return nil
}

func (x *SendPhoto) GetReplyMarkup() *ReplyMarkup {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

type SendAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessConnectionId  string           `protobuf:"bytes,1,opt,name=business_connection_id,json=businessConnectionId,proto3" json:"business_connection_id,omitempty"`
	ChatId                string           `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageThreadId       int64            `protobuf:"varint,3,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty"`
	Animation             string           `protobuf:"bytes,4,opt,name=animation,proto3" json:"animation,omitempty"`
	Caption               string           `protobuf:"bytes,5,opt,name=caption,proto3" json:"caption,omitempty"`
	ParseMode             string           `protobuf:"bytes,6,opt,name=parse_mode,json=parseMode,proto3" json:"parse_mode,omitempty"`
	CaptionEntities       []*MessageEntity `protobuf:"bytes,7,rep,name=caption_entities,json=captionEntities,proto3" json:"caption_entities,omitempty"`
	ShowCaptionAboveMedia bool             `protobuf:"varint,8,opt,name=show_caption_above_media,json=showCaptionAboveMedia,proto3" json:"show_caption_above_media,omitempty"`
	HasSpoiler            bool             `protobuf:"varint,9,opt,name=has_spoiler,json=hasSpoiler,proto3" json:"has_spoiler,omitempty"`
	DisableNotification   bool             `protobuf:"varint,10,opt,name=disable_notification,json=disableNotification,proto3" json:"disable_notification,omitempty"`
	ProtectContent        bool             `protobuf:"varint,11,opt,name=protect_content,json=protectContent,proto3" json:"protect_content,omitempty"`
	MessageEffectId       string           `protobuf:"bytes,12,opt,name=message_effect_id,json=messageEffectId,proto3" json:"message_effect_id,omitempty"`
	ReplyParameters       *ReplyParameters `protobuf:"bytes,13,opt,name=reply_parameters,json=replyParameters,proto3" json:"reply_parameters,omitempty"`
	ReplyMarkup           *ReplyMarkup     `protobuf:"bytes,14,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Duration              uint32           `protobuf:"varint,15,opt,name=duration,proto3" json:"duration,omitempty"`
	Width                 uint32           `protobuf:"varint,16,opt,name=width,proto3" json:"width,omitempty"`
	Height                uint32           `protobuf:"varint,17,opt,name=height,proto3" json:"height,omitempty"`
	Thumbnail             string           `protobuf:"bytes,18,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
}

func (x *SendAnimation) Reset() {
	*x = SendAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAnimation) ProtoMessage() {}

func (x *SendAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_photo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAnimation.ProtoReflect.Descriptor instead.
func (*SendAnimation) Descriptor() ([]byte, []int) {
	return file_photo_proto_rawDescGZIP(), []int{3}
}

func (x *SendAnimation) GetBusinessConnectionId() string {
	if x != nil {
		return x.BusinessConnectionId
	}
	return ""
}

func (x *SendAnimation) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SendAnimation) GetMessageThreadId() int64 {
	if x != nil {
		return x.MessageThreadId
	}
	return 0
}

func (x *SendAnimation) GetAnimation() string {
	if x != nil {
		return x.Animation
	}
	return ""
}

func (x *SendAnimation) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *SendAnimation) GetParseMode() string {
	if x != nil {
		return x.ParseMode
	}
	return ""
}

func (x *SendAnimation) GetCaptionEntities() []*MessageEntity {
	if x != nil {
		return x.CaptionEntities
	}
	return nil
}

func (x *SendAnimation) GetShowCaptionAboveMedia() bool {
	if x != nil {
		return x.ShowCaptionAboveMedia
	}
	return false
}

func (x *SendAnimation) GetHasSpoiler() bool {
	if x != nil {
		return x.HasSpoiler
	}
	return false
}

func (x *SendAnimation) GetDisableNotification() bool {
	if x != nil {
		return x.DisableNotification
	}
	return false
}

func (x *SendAnimation) GetProtectContent() bool {
	if x != nil {
		return x.ProtectContent
	}
	return false
}

func (x *SendAnimation) GetMessageEffectId() string {
	if x != nil {
		return x.MessageEffectId
	}
	return ""
}

func (x *SendAnimation) GetReplyParameters() *ReplyParameters {
	if x != nil {
		return x.ReplyParameters
	}
	return nil
}

func (x *SendAnimation) GetReplyMarkup() *ReplyMarkup {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

func (x *SendAnimation) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SendAnimation) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SendAnimation) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SendAnimation) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

var File_photo_proto protoreflect.FileDescriptor

var file_photo_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x69, 0x73, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x1c, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xe9, 0x04, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3c,
	0x0a, 0x10, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x18,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x6f,
	0x76, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x73, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x53,
	0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x61, 0x72, 0x6b, 0x75, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x22, 0xdd, 0x05, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x10, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x62, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x52, 0x0b, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_photo_proto_rawDescOnce sync.Once
	file_photo_proto_rawDescData = file_photo_proto_rawDesc
)

func file_photo_proto_rawDescGZIP() []byte {
	file_photo_proto_rawDescOnce.Do(func() {
		file_photo_proto_rawDescData = protoimpl.X.CompressGZIP(file_photo_proto_rawDescData)
	})
	return file_photo_proto_rawDescData
}

var file_photo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_photo_proto_goTypes = []any{
	(*PhotoReturn)(nil),     // 0: pb.PhotoReturn
	(*Photo)(nil),           // 1: pb.Photo
	(*SendPhoto)(nil),       // 2: pb.sendPhoto
	(*SendAnimation)(nil),   // 3: pb.sendAnimation
	(*User)(nil),            // 4: pb.User
	(*Chat)(nil),            // 5: pb.Chat
	(*MessageEntity)(nil),   // 6: pb.MessageEntity
	(*ReplyParameters)(nil), // 7: pb.ReplyParameters
	(*ReplyMarkup)(nil),     // 8: pb.ReplyMarkup
}
var file_photo_proto_depIdxs = []int32{
	4, // 0: pb.PhotoReturn.from:type_name -> pb.User
	5, // 1: pb.PhotoReturn.chat:type_name -> pb.Chat
	1, // 2: pb.PhotoReturn.photo:type_name -> pb.Photo
	6, // 3: pb.sendPhoto.caption_entities:type_name -> pb.MessageEntity
	7, // 4: pb.sendPhoto.reply_parameters:type_name -> pb.ReplyParameters
	8, // 5: pb.sendPhoto.reply_markup:type_name -> pb.ReplyMarkup
	6, // 6: pb.sendAnimation.caption_entities:type_name -> pb.MessageEntity
	7, // 7: pb.sendAnimation.reply_parameters:type_name -> pb.ReplyParameters
	8, // 8: pb.sendAnimation.reply_markup:type_name -> pb.ReplyMarkup
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_photo_proto_init() }
func file_photo_proto_init() {
	if File_photo_proto != nil {
		return
	}
	file_user_proto_init()
	file_chat_proto_init()
	file_misc_proto_init()
	file_reply_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_photo_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PhotoReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SendPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SendAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_photo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_photo_proto_goTypes,
		DependencyIndexes: file_photo_proto_depIdxs,
		MessageInfos:      file_photo_proto_msgTypes,
	}.Build()
	File_photo_proto = out.File
	file_photo_proto_rawDesc = nil
	file_photo_proto_goTypes = nil
	file_photo_proto_depIdxs = nil
}
